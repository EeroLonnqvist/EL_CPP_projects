// Project Euler Problem 2
// Even Fibonacci Numbers

/*
Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:

1,2,3,5,8,13,21,34,55,89,...

By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.
*/

#include <iostream>

unsigned int getSumOfEvenFibonacciSequenceTerms(unsigned int);

int main(){
  unsigned int result100 = getSumOfEvenFibonacciSequenceTerms(100);
  std::cout << result100 << std::endl; // Should be 44
  unsigned int result4M = getSumOfEvenFibonacciSequenceTerms(4000000);
  std::cout << result4M << std::endl; // Should be 4613732
  return 0;
}

unsigned int getSumOfEvenFibonacciSequenceTerms(unsigned int upperLimit){
  unsigned int evenSum = 2;
  unsigned int firstFibonacci = 1;
  unsigned int secondFibonacci = 2;
  while(firstFibonacci + secondFibonacci < upperLimit){
    secondFibonacci = firstFibonacci + secondFibonacci;
    firstFibonacci = secondFibonacci - firstFibonacci;
    if(secondFibonacci % 2 == 0){
      evenSum += secondFibonacci;
    }
  }
  return evenSum;
}